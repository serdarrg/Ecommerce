// <auto-generated />
using System;
using Ecommerce.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ecommerce.Migrations
{
    [DbContext(typeof(HomeContext))]
    partial class HomeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Ecommerce.Entity.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Balance")
                        .HasColumnType("REAL");

                    b.Property<string>("CustomerName")
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerOrder")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerPhone")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastOrder")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Ecommerce.Entity.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Products")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            OrderID = 1,
                            OrderDate = new DateTime(2021, 2, 13, 2, 58, 4, 901, DateTimeKind.Local).AddTicks(4927),
                            Products = 1
                        },
                        new
                        {
                            OrderID = 2,
                            OrderDate = new DateTime(2021, 2, 13, 2, 58, 4, 910, DateTimeKind.Local).AddTicks(7109),
                            Products = 2
                        },
                        new
                        {
                            OrderID = 3,
                            OrderDate = new DateTime(2021, 2, 13, 2, 58, 4, 910, DateTimeKind.Local).AddTicks(7213),
                            Products = 1
                        });
                });

            modelBuilder.Entity("Ecommerce.Entity.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("ProductPrice")
                        .HasColumnType("REAL");

                    b.Property<int?>("ordersOrderID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProductID");

                    b.HasIndex("ordersOrderID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            ProductName = "Polo",
                            ProductPrice = 5.0
                        },
                        new
                        {
                            ProductID = 2,
                            ProductName = "CalvinKlein",
                            ProductPrice = 25.0
                        },
                        new
                        {
                            ProductID = 3,
                            ProductName = "Gucci",
                            ProductPrice = 50.0
                        });
                });

            modelBuilder.Entity("Ecommerce.Entity.Seller", b =>
                {
                    b.Property<int>("SellerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductAmount")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Revenue")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("SellerCreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SellerName")
                        .HasColumnType("TEXT");

                    b.Property<double>("SellerRating")
                        .HasColumnType("REAL");

                    b.Property<string>("StoreName")
                        .HasColumnType("TEXT");

                    b.Property<double>("WalletBalance")
                        .HasColumnType("REAL");

                    b.HasKey("SellerID");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("Ecommerce.Entity.Product", b =>
                {
                    b.HasOne("Ecommerce.Entity.Order", "orders")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ordersOrderID");

                    b.Navigation("orders");
                });

            modelBuilder.Entity("Ecommerce.Entity.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
